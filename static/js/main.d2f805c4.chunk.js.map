{"version":3,"sources":["reportWebVitals.js","logo.svg","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","MarkdownPreviewer","props","state","editorText","markedUp","handleChange","bind","className","this","markedUpText","event","setState","target","value","marked","console","log","React","Component","Editor","id","onChange","Renderer","dangerouslySetInnerHTML","__html","MarkdownHeader","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,sCCPC,I,gCC2BTQ,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,WAAY,GACZC,SAAU,IAGZ,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBARH,E,0CAWnB,WACE,OACI,sBAAKC,UAAU,MAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAAC,EAAD,MAEJ,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,SAAf,SACI,cAAC,EAAD,CAAQJ,WAAYK,KAAKN,MAAMC,WAAYE,aAAcG,KAAKH,iBAElE,qBAAKE,UAAU,WAAf,SACI,cAAC,EAAD,CAAUE,aAAcD,KAAKN,MAAME,qB,0BAOrD,SAAaM,GACXF,KAAKG,SAAS,CACVR,WAAYO,EAAME,OAAOC,MACzBT,SAAUU,IAAOJ,EAAME,OAAOC,SAElCE,QAAQC,IAAIR,KAAKN,MAAME,c,GAnCKa,IAAMC,WAuChCC,E,kDACJ,WAAYlB,GAAQ,uCACZA,G,0CAGR,WACE,OACE,sBAAKM,UAAU,aAAf,UACE,wCACA,0BAAUA,UAAU,UAAUa,GAAG,SAASC,SAAUb,KAAKP,MAAMI,aAAcQ,MAAOL,KAAKP,MAAME,oB,GATlFc,IAAMC,WAerBI,E,kDACF,WAAYrB,GAAQ,uCACVA,G,0CAGV,WACI,OACI,sBAAKM,UAAU,aAAf,UACI,wCACA,qBACIa,GAAG,UACHG,wBAAyB,CACrBC,OAAQhB,KAAKP,MAAMQ,uB,GAZpBQ,IAAMC,WAoBvBO,E,kDACJ,WAAYxB,GAAQ,uCACZA,G,0CAGR,WACE,OACM,0D,GAPmBgB,IAAMC,WAYpBlB,IC3Gf0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1BvC,M","file":"static/js/main.d2f805c4.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport marked from 'marked'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\n\nclass MarkdownPreviewer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editorText: '',\n      markedUp: ''\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  render() {\n    return (\n        <div className='App'>\n            <div className='App-header'>\n                <MarkdownHeader/>\n            </div>\n            <div className='flex-container'>\n                <div className='Editor'>\n                    <Editor editorText={this.state.editorText} handleChange={this.handleChange}/>\n                </div>\n                <div className='Renderer'>\n                    <Renderer markedUpText={this.state.markedUp}/>\n                </div>\n            </div>\n        </div>\n  )\n  }\n\n  handleChange(event){\n    this.setState({\n        editorText: event.target.value,\n        markedUp: marked(event.target.value)\n    });\n    console.log(this.state.markedUp);\n  }\n}\n\nclass Editor extends React.Component {\n  constructor(props) {\n    super(props);\n\n  }\n  render() {\n    return (\n      <div className='editorArea'>\n        <h2>Editor</h2>\n        <textarea className='editBox' id='editor' onChange={this.props.handleChange} value={this.props.editorText}/>\n      </div>\n        )\n  }\n}\n\nclass Renderer extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n    render() {\n        return (\n            <div className='renderArea'>\n                <h2>Result</h2>\n                <div\n                    id='preview'\n                    dangerouslySetInnerHTML={{\n                        __html: this.props.markedUpText\n                    }}\n                />\n            </div>\n        )\n    }\n}\n\nclass MarkdownHeader extends React.Component {\n  constructor(props) {\n    super(props);\n\n  }\n  render () {\n    return (\n          <h1>Markdown Translator!</h1>\n    )\n  }\n}\n\nexport default MarkdownPreviewer;\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport MarkdownPreviewer from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <MarkdownPreviewer />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}